1717655004
8e50bcb8b881c126d616c17ca4146116-phpdoc%3A717a343d25827e532249975c303a3baa-a8fd4ffa185192c538d8ecd2d55fa6d4
s:98268:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjI5OiJTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6Mjg6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2UiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyODoiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJXaGl0ZXNwYWNlIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6NTQ6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlciI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjE1OntzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AaW1wbGVtZW50cyI7YToyOntzOjQ0OiJcUGhwQ3NGaXhlclxGaXhlclxDb25maWd1cmFibGVGaXhlckludGVyZmFjZSI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ0OiJcUGhwQ3NGaXhlclxGaXhlclxDb25maWd1cmFibGVGaXhlckludGVyZmFjZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI2OiJDb25maWd1cmFibGVGaXhlckludGVyZmFjZSI7fXM6NDg6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VzQXdhcmVGaXhlckludGVyZmFjZSI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ4OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlc0F3YXJlRml4ZXJJbnRlcmZhY2UiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozMDoiV2hpdGVzcGFjZXNBd2FyZUZpeGVySW50ZXJmYWNlIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjI6e3M6ODI6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6JGFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXIiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjEyOntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mzc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo4MjoiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjokYWx0ZXJuYXRpdmVTeW50YXhBbmFseXplciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI1OiJhbHRlcm5hdGl2ZVN5bnRheEFuYWx5emVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO047czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTY6IlxQaHBDc0ZpeGVyXFRva2VuaXplclxBbmFseXplclxBbHRlcm5hdGl2ZVN5bnRheEFuYWx5emVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjU6IkFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXIiO319czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBtZXRhZGF0YSI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAYXR0cmlidXRlcyI7YTowOnt9fXM6ODE6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6JGJyYWNlc0ZpeGVyQ29tcGF0aWJpbGl0eSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6MTI6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjgxOiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OiRicmFjZXNGaXhlckNvbXBhdGliaWxpdHkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyNDoiYnJhY2VzRml4ZXJDb21wYXRpYmlsaXR5Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO047czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHJlYWRPbmx5IjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbWV0YWRhdGEiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6MTI6e3M6Njk6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6X19jb25zdHJ1Y3QoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MjQ6ImJyYWNlc0ZpeGVyQ29tcGF0aWJpbGl0eSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czo1OiJmYWxzZSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyODQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTQ2Mzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2OToiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjpfX2NvbnN0cnVjdCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6Il9fY29uc3RydWN0Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NzE6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6Z2V0RGVmaW5pdGlvbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTQ3MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo5NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNzU4O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUyOiJcUGhwQ3NGaXhlclxGaXhlckRlZmluaXRpb25cRml4ZXJEZWZpbml0aW9uSW50ZXJmYWNlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjQ6IkZpeGVyRGVmaW5pdGlvbkludGVyZmFjZSI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3MToiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjpnZXREZWZpbml0aW9uKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoiZ2V0RGVmaW5pdGlvbiI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjY5OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmdldFByaW9yaXR5KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMDI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzA5Mzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMDU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzE1Nzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Njk6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6Z2V0UHJpb3JpdHkoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJnZXRQcmlvcml0eSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjEzOiJ7QGluaGVyaXRkb2N9IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjI2OToiTXVzdCBydW4gYmVmb3JlIEhlcmVkb2NJbmRlbnRhdGlvbkZpeGVyLgpNdXN0IHJ1biBhZnRlciBCcmFjZXNQb3NpdGlvbkZpeGVyLCBDbGFzc0F0dHJpYnV0ZXNTZXBhcmF0aW9uRml4ZXIsIEN1cmx5QnJhY2VzUG9zaXRpb25GaXhlciwgRnVsbHlRdWFsaWZpZWRTdHJpY3RUeXBlc0ZpeGVyLCBHbG9iYWxOYW1lc3BhY2VJbXBvcnRGaXhlciwgTWV0aG9kQXJndW1lbnRTcGFjZUZpeGVyLCBOb1VzZWxlc3NFbHNlRml4ZXIsIFlpZWxkRnJvbUFycmF5VG9ZaWVsZHNGaXhlci4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czoyNzoiUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YToxNTp7czoxMzoiQWJzdHJhY3RGaXhlciI7czoyNDoiUGhwQ3NGaXhlclxBYnN0cmFjdEZpeGVyIjtzOjI2OiJDb25maWd1cmFibGVGaXhlckludGVyZmFjZSI7czo0MzoiUGhwQ3NGaXhlclxGaXhlclxDb25maWd1cmFibGVGaXhlckludGVyZmFjZSI7czoxMToiSW5kZW50YXRpb24iO3M6Mjg6IlBocENzRml4ZXJcRml4ZXJcSW5kZW50YXRpb24iO3M6MzA6IldoaXRlc3BhY2VzQXdhcmVGaXhlckludGVyZmFjZSI7czo0NzoiUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlc0F3YXJlRml4ZXJJbnRlcmZhY2UiO3M6MjY6IkZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVyIjtzOjU2OiJQaHBDc0ZpeGVyXEZpeGVyQ29uZmlndXJhdGlvblxGaXhlckNvbmZpZ3VyYXRpb25SZXNvbHZlciI7czozNToiRml4ZXJDb25maWd1cmF0aW9uUmVzb2x2ZXJJbnRlcmZhY2UiO3M6NjU6IlBocENzRml4ZXJcRml4ZXJDb25maWd1cmF0aW9uXEZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVySW50ZXJmYWNlIjtzOjE4OiJGaXhlck9wdGlvbkJ1aWxkZXIiO3M6NDg6IlBocENzRml4ZXJcRml4ZXJDb25maWd1cmF0aW9uXEZpeGVyT3B0aW9uQnVpbGRlciI7czoxMDoiQ29kZVNhbXBsZSI7czozNzoiUGhwQ3NGaXhlclxGaXhlckRlZmluaXRpb25cQ29kZVNhbXBsZSI7czoxNToiRml4ZXJEZWZpbml0aW9uIjtzOjQyOiJQaHBDc0ZpeGVyXEZpeGVyRGVmaW5pdGlvblxGaXhlckRlZmluaXRpb24iO3M6MjQ6IkZpeGVyRGVmaW5pdGlvbkludGVyZmFjZSI7czo1MToiUGhwQ3NGaXhlclxGaXhlckRlZmluaXRpb25cRml4ZXJEZWZpbml0aW9uSW50ZXJmYWNlIjtzOjQ6IlByZWciO3M6MTU6IlBocENzRml4ZXJcUHJlZyI7czoyNToiQWx0ZXJuYXRpdmVTeW50YXhBbmFseXplciI7czo1NToiUGhwQ3NGaXhlclxUb2tlbml6ZXJcQW5hbHl6ZXJcQWx0ZXJuYXRpdmVTeW50YXhBbmFseXplciI7czoyOiJDVCI7czoyMzoiUGhwQ3NGaXhlclxUb2tlbml6ZXJcQ1QiO3M6NToiVG9rZW4iO3M6MjY6IlBocENzRml4ZXJcVG9rZW5pemVyXFRva2VuIjtzOjY6IlRva2VucyI7czoyNzoiUGhwQ3NGaXhlclxUb2tlbml6ZXJcVG9rZW5zIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjY5OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmlzQ2FuZGlkYXRlKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI4OiJcUGhwQ3NGaXhlclxUb2tlbml6ZXJcVG9rZW5zIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiVG9rZW5zIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoidG9rZW5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMDc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzE2NDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMTA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzI0NTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xCb29sZWFuIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Njk6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6aXNDYW5kaWRhdGUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJpc0NhbmRpZGF0ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjg3OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmNyZWF0ZUNvbmZpZ3VyYXRpb25EZWZpbml0aW9uKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMTI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzI1Mjt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzY3Njt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2NjoiXFBocENzRml4ZXJcRml4ZXJDb25maWd1cmF0aW9uXEZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVySW50ZXJmYWNlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MzU6IkZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVySW50ZXJmYWNlIjt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjg3OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmNyZWF0ZUNvbmZpZ3VyYXRpb25EZWZpbml0aW9uKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyOToiY3JlYXRlQ29uZmlndXJhdGlvbkRlZmluaXRpb24iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2NjoiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjphcHBseUZpeCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMjoiXFNwbEZpbGVJbmZvIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6IlNwbEZpbGVJbmZvIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiZmlsZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyODoiXFBocENzRml4ZXJcVG9rZW5pemVyXFRva2VucyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjY6IlRva2VucyI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6InRva2VucyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTIyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjM2ODM7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTY2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjIyMDM1O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjY6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6YXBwbHlGaXgoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjg6ImFwcGx5Rml4Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6Nzk6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6ZmluZFN0YXRlbWVudEVuZEluZGV4KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTozOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI4OiJcUGhwQ3NGaXhlclxUb2tlbml6ZXJcVG9rZW5zIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiVG9rZW5zIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoidG9rZW5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6ImluZGV4IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE5OiJwYXJlbnRTY29wZUVuZEluZGV4IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1Njg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjIwNDI7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjQ1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI0Nzc4O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3OToiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjpmaW5kU3RhdGVtZW50RW5kSW5kZXgoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIxOiJmaW5kU3RhdGVtZW50RW5kSW5kZXgiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NzQ6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6ZmluZENhc2VCbG9ja0VuZCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyODoiXFBocENzRml4ZXJcVG9rZW5pemVyXFRva2VucyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjY6IlRva2VucyI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6InRva2VucyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJpbmRleCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjUwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI0ODMzO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjY4NjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNjE5Mjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjc0OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmZpbmRDYXNlQmxvY2tFbmQoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJmaW5kQ2FzZUJsb2NrRW5kIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086NDc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlIjoxOntzOjU0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXEFycmF5U2hhcGUAaXRlbXMiO2E6Mjp7aTowO086NTE6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbSI6Mzp7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbQBrZXkiO3M6MDoiIjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXEFycmF5U2hhcGVJdGVtAHZhbHVlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NjE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUHNldWRvVHlwZXNcQXJyYXlTaGFwZUl0ZW0Ab3B0aW9uYWwiO2I6MDt9aToxO086NTE6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbSI6Mzp7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbQBrZXkiO3M6MDoiIjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXEFycmF5U2hhcGVJdGVtAHZhbHVlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NjE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUHNldWRvVHlwZXNcQXJyYXlTaGFwZUl0ZW0Ab3B0aW9uYWwiO2I6MDt9fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMzY7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6OTk6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6Z2V0TGluZUluZGVudGF0aW9uV2l0aEJyYWNlc0NvbXBhdGliaWxpdHkoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjM6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjg6IlxQaHBDc0ZpeGVyXFRva2VuaXplclxUb2tlbnMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo2OiJUb2tlbnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo2OiJ0b2tlbnMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiaW5kZXgiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTM6InJlZ3VsYXJJbmRlbnQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjY4ODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNjE5OTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3MDI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjY4MTg7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk5OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmdldExpbmVJbmRlbnRhdGlvbldpdGhCcmFjZXNDb21wYXRpYmlsaXR5KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0MToiZ2V0TGluZUluZGVudGF0aW9uV2l0aEJyYWNlc0NvbXBhdGliaWxpdHkiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NzM6IlxQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VcU3RhdGVtZW50SW5kZW50YXRpb25GaXhlcjo6aXNQcm9wZXJ0eVN0YXJ0KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI4OiJcUGhwQ3NGaXhlclxUb2tlbml6ZXJcVG9rZW5zIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiVG9rZW5zIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoidG9rZW5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6ImluZGV4IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3MDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjY5ODY7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NzMzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI3ODgwO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3MzoiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyOjppc1Byb3BlcnR5U3RhcnQoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJpc1Byb3BlcnR5U3RhcnQiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTMwOiJSZXR1cm5zIHdoZXRoZXIgdGhlIHRva2VuIGF0IGdpdmVuIGluZGV4IGlzIHRoZSBsYXN0IHRva2VuIGluIGEgcHJvcGVydHkKZGVjbGFyYXRpb24gYmVmb3JlIHRoZSB0eXBlIG9yIHRoZSBuYW1lIG9mIHRoYXQgcHJvcGVydHkuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTM2O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjg5OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmlzQ29tbWVudFdpdGhGaXhhYmxlSW5kZW50YXRpb24oKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjg6IlxQaHBDc0ZpeGVyXFRva2VuaXplclxUb2tlbnMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo2OiJUb2tlbnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo2OiJ0b2tlbnMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiaW5kZXgiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjc0MztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyODIwNzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3OTA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6Mjk2OTg7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjg5OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmlzQ29tbWVudFdpdGhGaXhhYmxlSW5kZW50YXRpb24oKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjMxOiJpc0NvbW1lbnRXaXRoRml4YWJsZUluZGVudGF0aW9uIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjg1OiJSZXR1cm5zIHdoZXRoZXIgdGhlIHRva2VuIGF0IGdpdmVuIGluZGV4IGlzIGEgY29tbWVudCB3aG9zZSBpbmRlbnRhdGlvbgpjYW4gYmUgZml4ZWQuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE3NToiSW5kZW50YXRpb24gb2YgYSBjb21tZW50IGlzIG5vdCBjaGFuZ2VkIHdoZW4gdGhlIGNvbW1lbnQgaXMgcGFydCBvZiBhCm11bHRpLWxpbmUgbWVzc2FnZSB3aG9zZSBsaW5lcyBhcmUgYWxsIHNpbmdsZS1saW5lIGNvbW1lbnRzIGFuZCBhdCBsZWFzdApvbmUgbGluZSBoYXMgbWVhbmluZ2Z1bCBjb250ZW50LiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTM2O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjk1OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmdldFNpYmxpbmdDb250aW51b3VzU2luZ2xlTGluZUNvbW1lbnQoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjM6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjg6IlxQaHBDc0ZpeGVyXFRva2VuaXplclxUb2tlbnMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo2OiJUb2tlbnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo2OiJ0b2tlbnMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiaW5kZXgiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiYWZ0ZXIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjc5MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyOTcwNTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo4MTk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzA3MjQ7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk1OiJcUGhwQ3NGaXhlclxGaXhlclxXaGl0ZXNwYWNlXFN0YXRlbWVudEluZGVudGF0aW9uRml4ZXI6OmdldFNpYmxpbmdDb250aW51b3VzU2luZ2xlTGluZUNvbW1lbnQoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjM3OiJnZXRTaWJsaW5nQ29udGludW91c1NpbmdsZUxpbmVDb21tZW50Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MTp7czoyOToiXFBocENzRml4ZXJcRml4ZXJcSW5kZW50YXRpb24iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyOToiXFBocENzRml4ZXJcRml4ZXJcSW5kZW50YXRpb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiSW5kZW50YXRpb24iO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjgyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NDoiXFBocENzRml4ZXJcRml4ZXJcV2hpdGVzcGFjZVxTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjU6IlN0YXRlbWVudEluZGVudGF0aW9uRml4ZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHBhcmVudCI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI1OiJcUGhwQ3NGaXhlclxBYnN0cmFjdEZpeGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6IkFic3RyYWN0Rml4ZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZmluYWwiO2I6MTtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcmVhZE9ubHkiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhdHRyaWJ1dGVzIjthOjA6e319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiYThmZDRmZmExODUxOTJjNTM4ZDhlY2QyZDU1ZmE2ZDQiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo4MzoidmVuZG9yL2ZyaWVuZHNvZnBocC9waHAtY3MtZml4ZXIvc3JjL0ZpeGVyL1doaXRlc3BhY2UvU3RhdGVtZW50SW5kZW50YXRpb25GaXhlci5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjMwNzI4OiI8P3BocAoKZGVjbGFyZShzdHJpY3RfdHlwZXM9MSk7CgovKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBQSFAgQ1MgRml4ZXIuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+CiAqICAgICBEYXJpdXN6IFJ1bWnFhHNraSA8ZGFyaXVzei5ydW1pbnNraUBnbWFpbC5jb20+CiAqCiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgTUlUIGxpY2Vuc2UgdGhhdCBpcyBidW5kbGVkCiAqIHdpdGggdGhpcyBzb3VyY2UgY29kZSBpbiB0aGUgZmlsZSBMSUNFTlNFLgogKi8KCm5hbWVzcGFjZSBQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2U7Cgp1c2UgUGhwQ3NGaXhlclxBYnN0cmFjdEZpeGVyOwp1c2UgUGhwQ3NGaXhlclxGaXhlclxDb25maWd1cmFibGVGaXhlckludGVyZmFjZTsKdXNlIFBocENzRml4ZXJcRml4ZXJcSW5kZW50YXRpb247CnVzZSBQaHBDc0ZpeGVyXEZpeGVyXFdoaXRlc3BhY2VzQXdhcmVGaXhlckludGVyZmFjZTsKdXNlIFBocENzRml4ZXJcRml4ZXJDb25maWd1cmF0aW9uXEZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVyOwp1c2UgUGhwQ3NGaXhlclxGaXhlckNvbmZpZ3VyYXRpb25cRml4ZXJDb25maWd1cmF0aW9uUmVzb2x2ZXJJbnRlcmZhY2U7CnVzZSBQaHBDc0ZpeGVyXEZpeGVyQ29uZmlndXJhdGlvblxGaXhlck9wdGlvbkJ1aWxkZXI7CnVzZSBQaHBDc0ZpeGVyXEZpeGVyRGVmaW5pdGlvblxDb2RlU2FtcGxlOwp1c2UgUGhwQ3NGaXhlclxGaXhlckRlZmluaXRpb25cRml4ZXJEZWZpbml0aW9uOwp1c2UgUGhwQ3NGaXhlclxGaXhlckRlZmluaXRpb25cRml4ZXJEZWZpbml0aW9uSW50ZXJmYWNlOwp1c2UgUGhwQ3NGaXhlclxQcmVnOwp1c2UgUGhwQ3NGaXhlclxUb2tlbml6ZXJcQW5hbHl6ZXJcQWx0ZXJuYXRpdmVTeW50YXhBbmFseXplcjsKdXNlIFBocENzRml4ZXJcVG9rZW5pemVyXENUOwp1c2UgUGhwQ3NGaXhlclxUb2tlbml6ZXJcVG9rZW47CnVzZSBQaHBDc0ZpeGVyXFRva2VuaXplclxUb2tlbnM7CgpmaW5hbCBjbGFzcyBTdGF0ZW1lbnRJbmRlbnRhdGlvbkZpeGVyIGV4dGVuZHMgQWJzdHJhY3RGaXhlciBpbXBsZW1lbnRzIENvbmZpZ3VyYWJsZUZpeGVySW50ZXJmYWNlLCBXaGl0ZXNwYWNlc0F3YXJlRml4ZXJJbnRlcmZhY2UKewogICAgdXNlIEluZGVudGF0aW9uOwoKICAgIHByaXZhdGUgQWx0ZXJuYXRpdmVTeW50YXhBbmFseXplciAkYWx0ZXJuYXRpdmVTeW50YXhBbmFseXplcjsKCiAgICBwcml2YXRlIGJvb2wgJGJyYWNlc0ZpeGVyQ29tcGF0aWJpbGl0eTsKCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoYm9vbCAkYnJhY2VzRml4ZXJDb21wYXRpYmlsaXR5ID0gZmFsc2UpCiAgICB7CiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgpOwoKICAgICAgICAkdGhpcy0+YnJhY2VzRml4ZXJDb21wYXRpYmlsaXR5ID0gJGJyYWNlc0ZpeGVyQ29tcGF0aWJpbGl0eTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0RGVmaW5pdGlvbigpOiBGaXhlckRlZmluaXRpb25JbnRlcmZhY2UKICAgIHsKICAgICAgICByZXR1cm4gbmV3IEZpeGVyRGVmaW5pdGlvbigKICAgICAgICAgICAgJ0VhY2ggc3RhdGVtZW50IG11c3QgYmUgaW5kZW50ZWQuJywKICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgbmV3IENvZGVTYW1wbGUoCiAgICAgICAgICAgICAgICAgICAgJzw/cGhwCmlmICgkYmF6ID09IHRydWUpIHsKICBlY2hvICJmb28iOwp9CmVsc2UgewogICAgICBlY2hvICJiYXIiOwp9CicKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBuZXcgQ29kZVNhbXBsZSgKICAgICAgICAgICAgICAgICAgICAnPD9waHAKICAgICAgICAvLyBmb28KaWYgKCRmb28pIHsKICAgIGVjaG8gImZvbyI7CiAgICAgICAgLy8gdGhpcyBpcyB0cmVhdGVkIGFzIGNvbW1lbnQgb2YgYGlmYCBibG9jaywgYXMgYHN0aWNrX2NvbW1lbnRfdG9fbmV4dF9jb250aW51b3VzX2NvbnRyb2xfc3RhdGVtZW50YCBpcyBkaXNhYmxlZAp9IGVsc2UgewogICAgJGFhYSA9IDE7Cn0KJywKICAgICAgICAgICAgICAgICAgICBbJ3N0aWNrX2NvbW1lbnRfdG9fbmV4dF9jb250aW51b3VzX2NvbnRyb2xfc3RhdGVtZW50JyA9PiBmYWxzZV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBuZXcgQ29kZVNhbXBsZSgKICAgICAgICAgICAgICAgICAgICAnPD9waHAKICAgICAgICAvLyBmb28KaWYgKCRmb28pIHsKICAgIGVjaG8gImZvbyI7CiAgICAgICAgLy8gdGhpcyBpcyB0cmVhdGVkIGFzIGNvbW1lbnQgb2YgYGVsc2VpZigxKWAgYmxvY2ssIGFzIGBzdGlja19jb21tZW50X3RvX25leHRfY29udGludW91c19jb250cm9sX3N0YXRlbWVudGAgaXMgZW5hYmxlZAp9IGVsc2VpZigxKSB7CiAgICBlY2hvICJiYXIiOwp9IGVsc2VpZigyKSB7CiAgICAgICAgLy8gdGhpcyBpcyB0cmVhdGVkIGFzIGNvbW1lbnQgb2YgYGVsc2VpZigyKWAgYmxvY2ssIGFzIHRoZSBvbmx5IGNvbnRlbnQgb2YgdGhhdCBibG9jawp9IGVsc2VpZigzKSB7CiAgICAkYWFhID0gMTsKICAgICAgICAvLyB0aGlzIGlzIHRyZWF0ZWQgYXMgY29tbWVudCBvZiBgZWxzZWlmKDMpYCBibG9jaywgYXMgaXQgaXMgYSBjb21tZW50IGluIHRoZSBmaW5hbCBibG9jawp9CicsCiAgICAgICAgICAgICAgICAgICAgWydzdGlja19jb21tZW50X3RvX25leHRfY29udGludW91c19jb250cm9sX3N0YXRlbWVudCcgPT4gdHJ1ZV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0KICAgICAgICApOwogICAgfQoKICAgIC8qKgogICAgICoge0Bpbmhlcml0ZG9jfQogICAgICoKICAgICAqIE11c3QgcnVuIGJlZm9yZSBIZXJlZG9jSW5kZW50YXRpb25GaXhlci4KICAgICAqIE11c3QgcnVuIGFmdGVyIEJyYWNlc1Bvc2l0aW9uRml4ZXIsIENsYXNzQXR0cmlidXRlc1NlcGFyYXRpb25GaXhlciwgQ3VybHlCcmFjZXNQb3NpdGlvbkZpeGVyLCBGdWxseVF1YWxpZmllZFN0cmljdFR5cGVzRml4ZXIsIEdsb2JhbE5hbWVzcGFjZUltcG9ydEZpeGVyLCBNZXRob2RBcmd1bWVudFNwYWNlRml4ZXIsIE5vVXNlbGVzc0Vsc2VGaXhlciwgWWllbGRGcm9tQXJyYXlUb1lpZWxkc0ZpeGVyLgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0UHJpb3JpdHkoKTogaW50CiAgICB7CiAgICAgICAgcmV0dXJuIC0zOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBpc0NhbmRpZGF0ZShUb2tlbnMgJHRva2Vucyk6IGJvb2wKICAgIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gY3JlYXRlQ29uZmlndXJhdGlvbkRlZmluaXRpb24oKTogRml4ZXJDb25maWd1cmF0aW9uUmVzb2x2ZXJJbnRlcmZhY2UKICAgIHsKICAgICAgICByZXR1cm4gbmV3IEZpeGVyQ29uZmlndXJhdGlvblJlc29sdmVyKFsKICAgICAgICAgICAgKG5ldyBGaXhlck9wdGlvbkJ1aWxkZXIoJ3N0aWNrX2NvbW1lbnRfdG9fbmV4dF9jb250aW51b3VzX2NvbnRyb2xfc3RhdGVtZW50JywgJ0xhc3QgY29tbWVudCBvZiBjb2RlIGJsb2NrIGNvdW50cyBhcyBjb21tZW50IGZvciBuZXh0IGJsb2NrLicpKQogICAgICAgICAgICAgICAgLT5zZXRBbGxvd2VkVHlwZXMoWydib29sJ10pCiAgICAgICAgICAgICAgICAtPnNldERlZmF1bHQoZmFsc2UpCiAgICAgICAgICAgICAgICAtPmdldE9wdGlvbigpLAogICAgICAgIF0pOwogICAgfQoKICAgIHByb3RlY3RlZCBmdW5jdGlvbiBhcHBseUZpeChcU3BsRmlsZUluZm8gJGZpbGUsIFRva2VucyAkdG9rZW5zKTogdm9pZAogICAgewogICAgICAgICR0aGlzLT5hbHRlcm5hdGl2ZVN5bnRheEFuYWx5emVyID0gbmV3IEFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXIoKTsKCiAgICAgICAgJGJsb2NrU2lnbmF0dXJlRmlyc3RUb2tlbnMgPSBbCiAgICAgICAgICAgIFRfVVNFLAogICAgICAgICAgICBUX0lGLAogICAgICAgICAgICBUX0VMU0UsCiAgICAgICAgICAgIFRfRUxTRUlGLAogICAgICAgICAgICBUX0ZPUiwKICAgICAgICAgICAgVF9GT1JFQUNILAogICAgICAgICAgICBUX1dISUxFLAogICAgICAgICAgICBUX0RPLAogICAgICAgICAgICBUX1NXSVRDSCwKICAgICAgICAgICAgVF9DQVNFLAogICAgICAgICAgICBUX0RFRkFVTFQsCiAgICAgICAgICAgIFRfVFJZLAogICAgICAgICAgICBUX0NMQVNTLAogICAgICAgICAgICBUX0lOVEVSRkFDRSwKICAgICAgICAgICAgVF9UUkFJVCwKICAgICAgICAgICAgVF9FWFRFTkRTLAogICAgICAgICAgICBUX0lNUExFTUVOVFMsCiAgICAgICAgICAgIFRfQ09OU1QsCiAgICAgICAgXTsKICAgICAgICAkY29udHJvbFN0cnVjdHVyZVBvc3NpYmlibHlXaXRob3V0QnJhY2VzVG9rZW5zID0gWwogICAgICAgICAgICBUX0lGLAogICAgICAgICAgICBUX0VMU0UsCiAgICAgICAgICAgIFRfRUxTRUlGLAogICAgICAgICAgICBUX0ZPUiwKICAgICAgICAgICAgVF9GT1JFQUNILAogICAgICAgICAgICBUX1dISUxFLAogICAgICAgICAgICBUX0RPLAogICAgICAgIF07CiAgICAgICAgaWYgKFxkZWZpbmVkKCdUX01BVENIJykpIHsgLy8gQFRPRE86IGRyb3AgY29uZGl0aW9uIHdoZW4gUEhQIDguMCsgaXMgcmVxdWlyZWQKICAgICAgICAgICAgJGJsb2NrU2lnbmF0dXJlRmlyc3RUb2tlbnNbXSA9IFRfTUFUQ0g7CiAgICAgICAgfQoKICAgICAgICAkYmxvY2tGaXJzdFRva2VucyA9IFsneycsIFtDVDo6VF9ERVNUUlVDVFVSSU5HX1NRVUFSRV9CUkFDRV9PUEVOXSwgW0NUOjpUX1VTRV9UUkFJVF0sIFtDVDo6VF9HUk9VUF9JTVBPUlRfQlJBQ0VfT1BFTl1dOwogICAgICAgIGlmIChcZGVmaW5lZCgnVF9BVFRSSUJVVEUnKSkgeyAvLyBAVE9ETzogZHJvcCBjb25kaXRpb24gd2hlbiBQSFAgOC4wKyBpcyByZXF1aXJlZAogICAgICAgICAgICAkYmxvY2tGaXJzdFRva2Vuc1tdID0gW1RfQVRUUklCVVRFXTsKICAgICAgICB9CgogICAgICAgICRlbmRJbmRleCA9IFxjb3VudCgkdG9rZW5zKSAtIDE7CiAgICAgICAgaWYgKCR0b2tlbnNbJGVuZEluZGV4XS0+aXNXaGl0ZXNwYWNlKCkpIHsKICAgICAgICAgICAgLS0kZW5kSW5kZXg7CiAgICAgICAgfQoKICAgICAgICAkbGFzdEluZGVudCA9ICR0aGlzLT5nZXRMaW5lSW5kZW50YXRpb25XaXRoQnJhY2VzQ29tcGF0aWJpbGl0eSgKICAgICAgICAgICAgJHRva2VucywKICAgICAgICAgICAgMCwKICAgICAgICAgICAgJHRoaXMtPmV4dHJhY3RJbmRlbnQoJHRoaXMtPmNvbXB1dGVOZXdMaW5lQ29udGVudCgkdG9rZW5zLCAwKSksCiAgICAgICAgKTsKCiAgICAgICAgLyoqCiAgICAgICAgICogQHZhciBsaXN0PGFycmF5ewogICAgICAgICAqICAgICB0eXBlOiAnYmxvY2snfCdibG9ja19zaWduYXR1cmUnfCdzdGF0ZW1lbnQnLAogICAgICAgICAqICAgICBza2lwOiBib29sLAogICAgICAgICAqICAgICBlbmRfaW5kZXg6IGludCwKICAgICAgICAgKiAgICAgZW5kX2luZGV4X2luY2x1c2l2ZTogYm9vbCwKICAgICAgICAgKiAgICAgaW5pdGlhbF9pbmRlbnQ6IHN0cmluZywKICAgICAgICAgKiAgICAgbmV3X2luZGVudD86IHN0cmluZywKICAgICAgICAgKiAgICAgaXNfaW5kZW50ZWRfYmxvY2s6IGJvb2wsCiAgICAgICAgICogfT4gJHNjb3BlcwogICAgICAgICAqLwogICAgICAgICRzY29wZXMgPSBbCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnYmxvY2snLAogICAgICAgICAgICAgICAgJ3NraXAnID0+IGZhbHNlLAogICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJGVuZEluZGV4LAogICAgICAgICAgICAgICAgJ2VuZF9pbmRleF9pbmNsdXNpdmUnID0+IHRydWUsCiAgICAgICAgICAgICAgICAnaW5pdGlhbF9pbmRlbnQnID0+ICRsYXN0SW5kZW50LAogICAgICAgICAgICAgICAgJ2lzX2luZGVudGVkX2Jsb2NrJyA9PiBmYWxzZSwKICAgICAgICAgICAgXSwKICAgICAgICBdOwoKICAgICAgICAkcHJldmlvdXNMaW5lSW5pdGlhbEluZGVudCA9ICcnOwogICAgICAgICRwcmV2aW91c0xpbmVOZXdJbmRlbnQgPSAnJzsKICAgICAgICAkbm9CcmFjZXNCbG9ja1N0YXJ0cyA9IFtdOwogICAgICAgICRhbHRlcm5hdGl2ZUJsb2NrU3RhcnRzID0gW107CiAgICAgICAgJGNhc2VCbG9ja1N0YXJ0cyA9IFtdOwoKICAgICAgICBmb3JlYWNoICgkdG9rZW5zIGFzICRpbmRleCA9PiAkdG9rZW4pIHsKICAgICAgICAgICAgJGN1cnJlbnRTY29wZSA9IFxjb3VudCgkc2NvcGVzKSAtIDE7CgogICAgICAgICAgICBpZiAoaXNzZXQoJG5vQnJhY2VzQmxvY2tTdGFydHNbJGluZGV4XSkpIHsKICAgICAgICAgICAgICAgICRzY29wZXNbXSA9IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2Jsb2NrJywKICAgICAgICAgICAgICAgICAgICAnc2tpcCcgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJHRoaXMtPmZpbmRTdGF0ZW1lbnRFbmRJbmRleCgkdG9rZW5zLCAkaW5kZXgsIFxjb3VudCgkdG9rZW5zKSAtIDEpLAogICAgICAgICAgICAgICAgICAgICdlbmRfaW5kZXhfaW5jbHVzaXZlJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgICdpbml0aWFsX2luZGVudCcgPT4gJHRoaXMtPmdldExpbmVJbmRlbnRhdGlvbldpdGhCcmFjZXNDb21wYXRpYmlsaXR5KCR0b2tlbnMsICRpbmRleCwgJGxhc3RJbmRlbnQpLAogICAgICAgICAgICAgICAgICAgICdpc19pbmRlbnRlZF9ibG9jaycgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICArKyRjdXJyZW50U2NvcGU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICR0b2tlbi0+ZXF1YWxzQW55KCRibG9ja0ZpcnN0VG9rZW5zKQogICAgICAgICAgICAgICAgfHwgKCR0b2tlbi0+ZXF1YWxzKCcoJykgJiYgISR0b2tlbnNbJHRva2Vucy0+Z2V0UHJldk1lYW5pbmdmdWxUb2tlbigkaW5kZXgpXS0+aXNHaXZlbktpbmQoVF9BUlJBWSkpCiAgICAgICAgICAgICAgICB8fCBpc3NldCgkYWx0ZXJuYXRpdmVCbG9ja1N0YXJ0c1skaW5kZXhdKQogICAgICAgICAgICAgICAgfHwgaXNzZXQoJGNhc2VCbG9ja1N0YXJ0c1skaW5kZXhdKQogICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICRlbmRJbmRleEluY2x1c2l2ZSA9IHRydWU7CgogICAgICAgICAgICAgICAgaWYgKCR0b2tlbi0+aXNHaXZlbktpbmQoW1RfRVhURU5EUywgVF9JTVBMRU1FTlRTXSkpIHsKICAgICAgICAgICAgICAgICAgICAkZW5kSW5kZXggPSAkdG9rZW5zLT5nZXROZXh0VG9rZW5PZktpbmQoJGluZGV4LCBbJ3snXSk7CiAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHRva2VuLT5pc0dpdmVuS2luZChDVDo6VF9VU0VfVFJBSVQpKSB7CiAgICAgICAgICAgICAgICAgICAgJGVuZEluZGV4ID0gJHRva2Vucy0+Z2V0TmV4dFRva2VuT2ZLaW5kKCRpbmRleCwgWyc7J10pOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCR0b2tlbi0+ZXF1YWxzKCc6JykpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGNhc2VCbG9ja1N0YXJ0c1skaW5kZXhdKSkgewogICAgICAgICAgICAgICAgICAgICAgICBbJGVuZEluZGV4LCAkZW5kSW5kZXhJbmNsdXNpdmVdID0gJHRoaXMtPmZpbmRDYXNlQmxvY2tFbmQoJHRva2VucywgJGluZGV4KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHRoaXMtPmFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXItPmJlbG9uZ3NUb0FsdGVybmF0aXZlU3ludGF4KCR0b2tlbnMsICRpbmRleCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGVuZEluZGV4ID0gJHRoaXMtPmFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXItPmZpbmRBbHRlcm5hdGl2ZVN5bnRheEJsb2NrRW5kKCR0b2tlbnMsICRhbHRlcm5hdGl2ZUJsb2NrU3RhcnRzWyRpbmRleF0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZWlmICgkdG9rZW4tPmlzR2l2ZW5LaW5kKENUOjpUX0RFU1RSVUNUVVJJTkdfU1FVQVJFX0JSQUNFX09QRU4pKSB7CiAgICAgICAgICAgICAgICAgICAgJGVuZEluZGV4ID0gJHRva2Vucy0+Z2V0TmV4dFRva2VuT2ZLaW5kKCRpbmRleCwgW1tDVDo6VF9ERVNUUlVDVFVSSU5HX1NRVUFSRV9CUkFDRV9DTE9TRV1dKTsKICAgICAgICAgICAgICAgIH0gZWxzZWlmICgkdG9rZW4tPmlzR2l2ZW5LaW5kKENUOjpUX0dST1VQX0lNUE9SVF9CUkFDRV9PUEVOKSkgewogICAgICAgICAgICAgICAgICAgICRlbmRJbmRleCA9ICR0b2tlbnMtPmdldE5leHRUb2tlbk9mS2luZCgkaW5kZXgsIFtbQ1Q6OlRfR1JPVVBfSU1QT1JUX0JSQUNFX0NMT1NFXV0pOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCR0b2tlbi0+ZXF1YWxzKCd7JykpIHsKICAgICAgICAgICAgICAgICAgICAkZW5kSW5kZXggPSAkdG9rZW5zLT5maW5kQmxvY2tFbmQoVG9rZW5zOjpCTE9DS19UWVBFX0NVUkxZX0JSQUNFLCAkaW5kZXgpOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCR0b2tlbi0+ZXF1YWxzKCcoJykpIHsKICAgICAgICAgICAgICAgICAgICAkZW5kSW5kZXggPSAkdG9rZW5zLT5maW5kQmxvY2tFbmQoVG9rZW5zOjpCTE9DS19UWVBFX1BBUkVOVEhFU0lTX0JSQUNFLCAkaW5kZXgpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkZW5kSW5kZXggPSAkdG9rZW5zLT5maW5kQmxvY2tFbmQoVG9rZW5zOjpCTE9DS19UWVBFX0FUVFJJQlVURSwgJGluZGV4KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJ2Jsb2NrX3NpZ25hdHVyZScgPT09ICRzY29wZXNbJGN1cnJlbnRTY29wZV1bJ3R5cGUnXSkgewogICAgICAgICAgICAgICAgICAgICRpbml0aWFsSW5kZW50ID0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsnaW5pdGlhbF9pbmRlbnQnXTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJGluaXRpYWxJbmRlbnQgPSAkdGhpcy0+Z2V0TGluZUluZGVudGF0aW9uV2l0aEJyYWNlc0NvbXBhdGliaWxpdHkoJHRva2VucywgJGluZGV4LCAkbGFzdEluZGVudCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNraXAgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+YnJhY2VzRml4ZXJDb21wYXRpYmlsaXR5KSB7CiAgICAgICAgICAgICAgICAgICAgJHByZXZJbmRleCA9ICR0b2tlbnMtPmdldFByZXZNZWFuaW5nZnVsVG9rZW4oJGluZGV4KTsKICAgICAgICAgICAgICAgICAgICBpZiAobnVsbCAhPT0gJHByZXZJbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICAkcHJldkluZGV4ID0gJHRva2Vucy0+Z2V0UHJldk1lYW5pbmdmdWxUb2tlbigkcHJldkluZGV4KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgIT09ICRwcmV2SW5kZXggJiYgJHRva2Vuc1skcHJldkluZGV4XS0+aXNHaXZlbktpbmQoW1RfRlVOQ1RJT04sIFRfRk5dKSkgewogICAgICAgICAgICAgICAgICAgICAgICAkc2tpcCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRzY29wZXNbXSA9IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2Jsb2NrJywKICAgICAgICAgICAgICAgICAgICAnc2tpcCcgPT4gJHNraXAsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJGVuZEluZGV4LAogICAgICAgICAgICAgICAgICAgICdlbmRfaW5kZXhfaW5jbHVzaXZlJyA9PiAkZW5kSW5kZXhJbmNsdXNpdmUsCiAgICAgICAgICAgICAgICAgICAgJ2luaXRpYWxfaW5kZW50JyA9PiAkaW5pdGlhbEluZGVudCwKICAgICAgICAgICAgICAgICAgICAnaXNfaW5kZW50ZWRfYmxvY2snID0+IHRydWUsCiAgICAgICAgICAgICAgICBdOwogICAgICAgICAgICAgICAgKyskY3VycmVudFNjb3BlOwoKICAgICAgICAgICAgICAgIHdoaWxlICgkaW5kZXggPj0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsnZW5kX2luZGV4J10pIHsKICAgICAgICAgICAgICAgICAgICBhcnJheV9wb3AoJHNjb3Blcyk7CgogICAgICAgICAgICAgICAgICAgIC0tJGN1cnJlbnRTY29wZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgJHRva2VuLT5pc0dpdmVuS2luZChDVDo6VF9BUlJBWV9TUVVBUkVfQlJBQ0VfT1BFTikKICAgICAgICAgICAgICAgIHx8ICgkdG9rZW4tPmVxdWFscygnKCcpICYmICR0b2tlbnNbJHRva2Vucy0+Z2V0UHJldk1lYW5pbmdmdWxUb2tlbigkaW5kZXgpXS0+aXNHaXZlbktpbmQoVF9BUlJBWSkpCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgJGJsb2NrVHlwZSA9ICR0b2tlbi0+ZXF1YWxzKCcoJykgPyBUb2tlbnM6OkJMT0NLX1RZUEVfUEFSRU5USEVTSVNfQlJBQ0UgOiBUb2tlbnM6OkJMT0NLX1RZUEVfQVJSQVlfU1FVQVJFX0JSQUNFOwoKICAgICAgICAgICAgICAgICRzY29wZXNbXSA9IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N0YXRlbWVudCcsCiAgICAgICAgICAgICAgICAgICAgJ3NraXAnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJHRva2Vucy0+ZmluZEJsb2NrRW5kKCRibG9ja1R5cGUsICRpbmRleCksCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleF9pbmNsdXNpdmUnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgJ2luaXRpYWxfaW5kZW50JyA9PiAkcHJldmlvdXNMaW5lSW5pdGlhbEluZGVudCwKICAgICAgICAgICAgICAgICAgICAnbmV3X2luZGVudCcgPT4gJHByZXZpb3VzTGluZU5ld0luZGVudCwKICAgICAgICAgICAgICAgICAgICAnaXNfaW5kZW50ZWRfYmxvY2snID0+IGZhbHNlLAogICAgICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGlzUHJvcGVydHlTdGFydCA9ICR0aGlzLT5pc1Byb3BlcnR5U3RhcnQoJHRva2VucywgJGluZGV4KTsKICAgICAgICAgICAgaWYgKCRpc1Byb3BlcnR5U3RhcnQgfHwgJHRva2VuLT5pc0dpdmVuS2luZCgkYmxvY2tTaWduYXR1cmVGaXJzdFRva2VucykpIHsKICAgICAgICAgICAgICAgICRsYXN0V2hpdGVzcGFjZUluZGV4ID0gbnVsbDsKICAgICAgICAgICAgICAgICRjbG9zaW5nUGFyZW50aGVzaXNJbmRleCA9IG51bGw7CgogICAgICAgICAgICAgICAgZm9yICgkZW5kSW5kZXggPSAkaW5kZXggKyAxLCAkbWF4ID0gXGNvdW50KCR0b2tlbnMpOyAkZW5kSW5kZXggPCAkbWF4OyArKyRlbmRJbmRleCkgewogICAgICAgICAgICAgICAgICAgICRlbmRUb2tlbiA9ICR0b2tlbnNbJGVuZEluZGV4XTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCRlbmRUb2tlbi0+ZXF1YWxzKCcoJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGNsb3NpbmdQYXJlbnRoZXNpc0luZGV4ID0gJHRva2Vucy0+ZmluZEJsb2NrRW5kKFRva2Vuczo6QkxPQ0tfVFlQRV9QQVJFTlRIRVNJU19CUkFDRSwgJGVuZEluZGV4KTsKICAgICAgICAgICAgICAgICAgICAgICAgJGVuZEluZGV4ID0gJGNsb3NpbmdQYXJlbnRoZXNpc0luZGV4OwoKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAoJGVuZFRva2VuLT5lcXVhbHNBbnkoWyd7JywgJzsnLCBbVF9ET1VCTEVfQVJST1ddLCBbVF9JTVBMRU1FTlRTXV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCRlbmRUb2tlbi0+ZXF1YWxzKCc6JykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0b2tlbi0+aXNHaXZlbktpbmQoW1RfQ0FTRSwgVF9ERUZBVUxUXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjYXNlQmxvY2tTdGFydHNbJGVuZEluZGV4XSA9ICRpbmRleDsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhbHRlcm5hdGl2ZUJsb2NrU3RhcnRzWyRlbmRJbmRleF0gPSAkaW5kZXg7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCEkdG9rZW4tPmlzR2l2ZW5LaW5kKCRjb250cm9sU3RydWN0dXJlUG9zc2liaWJseVdpdGhvdXRCcmFjZXNUb2tlbnMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCRlbmRUb2tlbi0+aXNXaGl0ZXNwYWNlKCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RXaGl0ZXNwYWNlSW5kZXggPSAkZW5kSW5kZXg7CgogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICghJGVuZFRva2VuLT5pc0NvbW1lbnQoKSkgewogICAgICAgICAgICAgICAgICAgICAgICAkbm9CcmFjZUJsb2NrU3RhcnRJbmRleCA9ICRsYXN0V2hpdGVzcGFjZUluZGV4ID8/ICRlbmRJbmRleDsKICAgICAgICAgICAgICAgICAgICAgICAgJG5vQnJhY2VzQmxvY2tTdGFydHNbJG5vQnJhY2VCbG9ja1N0YXJ0SW5kZXhdID0gdHJ1ZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICRlbmRJbmRleCA9ICRjbG9zaW5nUGFyZW50aGVzaXNJbmRleCA/PyAkaW5kZXg7CgogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNjb3Blc1tdID0gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnYmxvY2tfc2lnbmF0dXJlJywKICAgICAgICAgICAgICAgICAgICAnc2tpcCcgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJGVuZEluZGV4LAogICAgICAgICAgICAgICAgICAgICdlbmRfaW5kZXhfaW5jbHVzaXZlJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgICdpbml0aWFsX2luZGVudCcgPT4gJHRoaXMtPmdldExpbmVJbmRlbnRhdGlvbldpdGhCcmFjZXNDb21wYXRpYmlsaXR5KCR0b2tlbnMsICRpbmRleCwgJGxhc3RJbmRlbnQpLAogICAgICAgICAgICAgICAgICAgICdpc19pbmRlbnRlZF9ibG9jaycgPT4gJGlzUHJvcGVydHlTdGFydCB8fCAkdG9rZW4tPmlzR2l2ZW5LaW5kKFtUX0VYVEVORFMsIFRfSU1QTEVNRU5UUywgVF9DT05TVF0pLAogICAgICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR0b2tlbi0+aXNHaXZlbktpbmQoVF9GVU5DVElPTikpIHsKICAgICAgICAgICAgICAgICRlbmRJbmRleCA9ICRpbmRleCArIDE7CgogICAgICAgICAgICAgICAgZm9yICgkbWF4ID0gXGNvdW50KCR0b2tlbnMpOyAkZW5kSW5kZXggPCAkbWF4OyArKyRlbmRJbmRleCkgewogICAgICAgICAgICAgICAgICAgIGlmICgkdG9rZW5zWyRlbmRJbmRleF0tPmVxdWFscygnKCcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRlbmRJbmRleCA9ICR0b2tlbnMtPmZpbmRCbG9ja0VuZChUb2tlbnM6OkJMT0NLX1RZUEVfUEFSRU5USEVTSVNfQlJBQ0UsICRlbmRJbmRleCk7CgogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmICgkdG9rZW5zWyRlbmRJbmRleF0tPmVxdWFsc0FueShbJ3snLCAnOyddKSkgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNjb3Blc1tdID0gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnYmxvY2tfc2lnbmF0dXJlJywKICAgICAgICAgICAgICAgICAgICAnc2tpcCcgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJGVuZEluZGV4LAogICAgICAgICAgICAgICAgICAgICdlbmRfaW5kZXhfaW5jbHVzaXZlJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgICdpbml0aWFsX2luZGVudCcgPT4gJHRoaXMtPmdldExpbmVJbmRlbnRhdGlvbldpdGhCcmFjZXNDb21wYXRpYmlsaXR5KCR0b2tlbnMsICRpbmRleCwgJGxhc3RJbmRlbnQpLAogICAgICAgICAgICAgICAgICAgICdpc19pbmRlbnRlZF9ibG9jaycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICBdOwoKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAkdG9rZW4tPmlzV2hpdGVzcGFjZSgpCiAgICAgICAgICAgICAgICB8fCAoJGluZGV4ID4gMCAmJiAkdG9rZW5zWyRpbmRleCAtIDFdLT5pc0dpdmVuS2luZChUX09QRU5fVEFHKSkKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAkcHJldmlvdXNPcGVuVGFnQ29udGVudCA9ICR0b2tlbnNbJGluZGV4IC0gMV0tPmlzR2l2ZW5LaW5kKFRfT1BFTl9UQUcpCiAgICAgICAgICAgICAgICAgICAgPyBQcmVnOjpyZXBsYWNlKCcvXFMvJywgJycsICR0b2tlbnNbJGluZGV4IC0gMV0tPmdldENvbnRlbnQoKSkKICAgICAgICAgICAgICAgICAgICA6ICcnOwoKICAgICAgICAgICAgICAgICRjb250ZW50ID0gJHByZXZpb3VzT3BlblRhZ0NvbnRlbnQuKCR0b2tlbi0+aXNXaGl0ZXNwYWNlKCkgPyAkdG9rZW4tPmdldENvbnRlbnQoKSA6ICcnKTsKCiAgICAgICAgICAgICAgICBpZiAoIVByZWc6Om1hdGNoKCcvXFIvJywgJGNvbnRlbnQpKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJG5leHRUb2tlbiA9ICR0b2tlbnNbJGluZGV4ICsgMV0gPz8gbnVsbDsKCiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmJyYWNlc0ZpeGVyQ29tcGF0aWJpbGl0eQogICAgICAgICAgICAgICAgICAgICYmIG51bGwgIT09ICRuZXh0VG9rZW4KICAgICAgICAgICAgICAgICAgICAmJiAkbmV4dFRva2VuLT5pc0NvbW1lbnQoKQogICAgICAgICAgICAgICAgICAgICYmICEkdGhpcy0+aXNDb21tZW50V2l0aEZpeGFibGVJbmRlbnRhdGlvbigkdG9rZW5zLCAkaW5kZXggKyAxKQogICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCdibG9jaycgPT09ICRzY29wZXNbJGN1cnJlbnRTY29wZV1bJ3R5cGUnXSB8fCAnYmxvY2tfc2lnbmF0dXJlJyA9PT0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsndHlwZSddKSB7CiAgICAgICAgICAgICAgICAgICAgJGluZGVudCA9IGZhbHNlOwoKICAgICAgICAgICAgICAgICAgICBpZiAoJHNjb3Blc1skY3VycmVudFNjb3BlXVsnaXNfaW5kZW50ZWRfYmxvY2snXSkgewogICAgICAgICAgICAgICAgICAgICAgICAkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgICRuZXh0TmV3bGluZUluZGV4ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkc2VhcmNoSW5kZXggPSAkaW5kZXggKyAxLCAkbWF4ID0gXGNvdW50KCR0b2tlbnMpOyAkc2VhcmNoSW5kZXggPCAkbWF4OyArKyRzZWFyY2hJbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlYXJjaFRva2VuID0gJHRva2Vuc1skc2VhcmNoSW5kZXhdOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHNlYXJjaFRva2VuLT5pc1doaXRlc3BhY2UoKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChudWxsID09PSAkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCA9ICRzZWFyY2hJbmRleDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChQcmVnOjptYXRjaCgnL1xSLycsICRzZWFyY2hUb2tlbi0+Z2V0Q29udGVudCgpKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRuZXh0TmV3bGluZUluZGV4ID0gJHNlYXJjaEluZGV4OwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgJGVuZEluZGV4ID0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsnZW5kX2luZGV4J107CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoISRzY29wZXNbJGN1cnJlbnRTY29wZV1bJ2VuZF9pbmRleF9pbmNsdXNpdmUnXSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgKyskZW5kSW5kZXg7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIChudWxsICE9PSAkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCAmJiAkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCA8ICRlbmRJbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IChudWxsICE9PSAkbmV4dE5ld2xpbmVJbmRleCAmJiAkbmV4dE5ld2xpbmVJbmRleCA8ICRlbmRJbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZG8gd2UgdG91Y2ggd2hpdGVzcGFjZSBkaXJlY3RseSBiZWZvcmUgY29tbWVudC4uLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0b2tlbnNbJGZpcnN0Tm9uV2hpdGVzcGFjZVRva2VuSW5kZXhdLT5pc0dpdmVuS2luZChUX0NPTU1FTlQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gLi4uYW5kIGFmdGVyd2FyZHMsIHRoZXJlIGlzIG9ubHkgY29tbWVudCBvciBgfWAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiAkdG9rZW5zWyR0b2tlbnMtPmdldE5leHRNZWFuaW5nZnVsVG9rZW4oJGZpcnN0Tm9uV2hpdGVzcGFjZVRva2VuSW5kZXgpXS0+ZXF1YWxzKCd9JykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gLi4uIGFuZCB0aGUgY29tbWVudCB3YXMgb25seSBjb250ZW50IGluIGRvY2Jsb2NrCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0b2tlbnNbJHRva2Vucy0+Z2V0UHJldk1lYW5pbmdmdWxUb2tlbigkZmlyc3ROb25XaGl0ZXNwYWNlVG9rZW5JbmRleCldLT5lcXVhbHMoJ3snKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW5kZW50ID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvciBpdCB3YXMgZGVkaWNhdGVkIGNvbW1lbnQgZm9yIG5leHQgY29udHJvbCBsb29wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIF5eIHdlIG5lZWQgdG8gY2hlY2sgaWYgdGhlcmUgaXMgYSBjb250cm9sIGdyb3VwIGFmdGVyd2FyZHMsIGFuZCBpbiB0aGF0IGNhc2UgZG9uJ3QgbWFrZSBleHRyYSBpbmRlbnQgbGV2ZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5leHRJbmRleCA9ICR0b2tlbnMtPmdldE5leHRNZWFuaW5nZnVsVG9rZW4oJGZpcnN0Tm9uV2hpdGVzcGFjZVRva2VuSW5kZXgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbmV4dE5leHRJbmRleCA9ICR0b2tlbnMtPmdldE5leHRNZWFuaW5nZnVsVG9rZW4oJG5leHRJbmRleCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobnVsbCAhPT0gJG5leHROZXh0SW5kZXggJiYgJHRva2Vuc1skbmV4dE5leHRJbmRleF0tPmlzR2l2ZW5LaW5kKFtUX0VMU0UsIFRfRUxTRUlGXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbmRlbnQgPSB0cnVlICE9PSAkdGhpcy0+Y29uZmlndXJhdGlvblsnc3RpY2tfY29tbWVudF90b19uZXh0X2NvbnRpbnVvdXNfY29udHJvbF9zdGF0ZW1lbnQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbmRlbnQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW5kZW50ID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJHByZXZpb3VzTGluZUluaXRpYWxJbmRlbnQgPSAkdGhpcy0+ZXh0cmFjdEluZGVudCgkY29udGVudCk7CgogICAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGVzWyRjdXJyZW50U2NvcGVdWydza2lwJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlc3BhY2VzID0gJHByZXZpb3VzTGluZUluaXRpYWxJbmRlbnQ7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlc3BhY2VzID0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsnaW5pdGlhbF9pbmRlbnQnXS4oJGluZGVudCA/ICR0aGlzLT53aGl0ZXNwYWNlc0NvbmZpZy0+Z2V0SW5kZW50KCkgOiAnJyk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAkY29udGVudCA9IFByZWc6OnJlcGxhY2UoCiAgICAgICAgICAgICAgICAgICAgICAgICcvKFxSKylcaCokLycsCiAgICAgICAgICAgICAgICAgICAgICAgICckMScuJHdoaXRlc3BhY2VzLAogICAgICAgICAgICAgICAgICAgICAgICAkY29udGVudAogICAgICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgICAgICRwcmV2aW91c0xpbmVOZXdJbmRlbnQgPSAkdGhpcy0+ZXh0cmFjdEluZGVudCgkY29udGVudCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRjb250ZW50ID0gUHJlZzo6cmVwbGFjZSgKICAgICAgICAgICAgICAgICAgICAgICAgJy8oXFIpJy4kc2NvcGVzWyRjdXJyZW50U2NvcGVdWydpbml0aWFsX2luZGVudCddLicoXGgqKSQvRCcsCiAgICAgICAgICAgICAgICAgICAgICAgICckMScuJHNjb3Blc1skY3VycmVudFNjb3BlXVsnbmV3X2luZGVudCddLickMicsCiAgICAgICAgICAgICAgICAgICAgICAgICRjb250ZW50CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkbGFzdEluZGVudCA9ICR0aGlzLT5leHRyYWN0SW5kZW50KCRjb250ZW50KTsKCiAgICAgICAgICAgICAgICBpZiAoJycgIT09ICRwcmV2aW91c09wZW5UYWdDb250ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgJGNvbnRlbnQgPSBQcmVnOjpyZXBsYWNlKCIvXnskcHJldmlvdXNPcGVuVGFnQ29udGVudH0vIiwgJycsICRjb250ZW50KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJycgIT09ICRjb250ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgJHRva2Vucy0+ZW5zdXJlV2hpdGVzcGFjZUF0SW5kZXgoJGluZGV4LCAwLCAkY29udGVudCk7CiAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHRva2VuLT5pc1doaXRlc3BhY2UoKSkgewogICAgICAgICAgICAgICAgICAgICR0b2tlbnMtPmNsZWFyQXQoJGluZGV4KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPT0gJG5leHRUb2tlbiAmJiAkbmV4dFRva2VuLT5pc0NvbW1lbnQoKSkgewogICAgICAgICAgICAgICAgICAgICR0b2tlbnNbJGluZGV4ICsgMV0gPSBuZXcgVG9rZW4oWwogICAgICAgICAgICAgICAgICAgICAgICAkbmV4dFRva2VuLT5nZXRJZCgpLAogICAgICAgICAgICAgICAgICAgICAgICBQcmVnOjpyZXBsYWNlKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJy8oXFIpJy5wcmVnX3F1b3RlKCRwcmV2aW91c0xpbmVJbml0aWFsSW5kZW50LCAnLycpLicoXGgqXFMrLiopLycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnJDEnLiRwcmV2aW91c0xpbmVOZXdJbmRlbnQuJyQyJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRuZXh0VG9rZW4tPmdldENvbnRlbnQoKQogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICgkdG9rZW4tPmlzV2hpdGVzcGFjZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkdGhpcy0+aXNOZXdMaW5lVG9rZW4oJHRva2VucywgJGluZGV4KSkgewogICAgICAgICAgICAgICAgJGxhc3RJbmRlbnQgPSAkdGhpcy0+ZXh0cmFjdEluZGVudCgkdGhpcy0+Y29tcHV0ZU5ld0xpbmVDb250ZW50KCR0b2tlbnMsICRpbmRleCkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB3aGlsZSAoJGluZGV4ID49ICRzY29wZXNbJGN1cnJlbnRTY29wZV1bJ2VuZF9pbmRleCddKSB7CiAgICAgICAgICAgICAgICBhcnJheV9wb3AoJHNjb3Blcyk7CgogICAgICAgICAgICAgICAgaWYgKFtdID09PSAkc2NvcGVzKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC0tJGN1cnJlbnRTY29wZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR0b2tlbi0+aXNDb21tZW50KCkgfHwgJHRva2VuLT5lcXVhbHNBbnkoWyc7JywgJywnLCAnfScsIFtUX09QRU5fVEFHXSwgW1RfQ0xPU0VfVEFHXSwgW0NUOjpUX0FUVFJJQlVURV9DTE9TRV1dKSkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgnc3RhdGVtZW50JyAhPT0gJHNjb3Blc1skY3VycmVudFNjb3BlXVsndHlwZSddICYmICdibG9ja19zaWduYXR1cmUnICE9PSAkc2NvcGVzWyRjdXJyZW50U2NvcGVdWyd0eXBlJ10pIHsKICAgICAgICAgICAgICAgICRlbmRJbmRleCA9ICR0aGlzLT5maW5kU3RhdGVtZW50RW5kSW5kZXgoJHRva2VucywgJGluZGV4LCAkc2NvcGVzWyRjdXJyZW50U2NvcGVdWydlbmRfaW5kZXgnXSk7CgogICAgICAgICAgICAgICAgaWYgKCRlbmRJbmRleCA9PT0gJGluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNjb3Blc1tdID0gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3RhdGVtZW50JywKICAgICAgICAgICAgICAgICAgICAnc2tpcCcgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgJ2VuZF9pbmRleCcgPT4gJGVuZEluZGV4LAogICAgICAgICAgICAgICAgICAgICdlbmRfaW5kZXhfaW5jbHVzaXZlJyA9PiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAnaW5pdGlhbF9pbmRlbnQnID0+ICRwcmV2aW91c0xpbmVJbml0aWFsSW5kZW50LAogICAgICAgICAgICAgICAgICAgICduZXdfaW5kZW50JyA9PiAkcHJldmlvdXNMaW5lTmV3SW5kZW50LAogICAgICAgICAgICAgICAgICAgICdpc19pbmRlbnRlZF9ibG9jaycgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiBmaW5kU3RhdGVtZW50RW5kSW5kZXgoVG9rZW5zICR0b2tlbnMsIGludCAkaW5kZXgsIGludCAkcGFyZW50U2NvcGVFbmRJbmRleCk6IGludAogICAgewogICAgICAgICRlbmRJbmRleCA9IG51bGw7CgogICAgICAgICRpZkxldmVsID0gMDsKICAgICAgICAkZG9XaGlsZUxldmVsID0gMDsKICAgICAgICBmb3IgKCRzZWFyY2hFbmRJbmRleCA9ICRpbmRleDsgJHNlYXJjaEVuZEluZGV4IDw9ICRwYXJlbnRTY29wZUVuZEluZGV4OyArKyRzZWFyY2hFbmRJbmRleCkgewogICAgICAgICAgICAkc2VhcmNoRW5kVG9rZW4gPSAkdG9rZW5zWyRzZWFyY2hFbmRJbmRleF07CgogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAkc2VhcmNoRW5kVG9rZW4tPmlzR2l2ZW5LaW5kKFRfSUYpCiAgICAgICAgICAgICAgICAmJiAhJHRva2Vuc1skdG9rZW5zLT5nZXRQcmV2TWVhbmluZ2Z1bFRva2VuKCRzZWFyY2hFbmRJbmRleCldLT5pc0dpdmVuS2luZChUX0VMU0UpCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgKyskaWZMZXZlbDsKCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRzZWFyY2hFbmRUb2tlbi0+aXNHaXZlbktpbmQoVF9ETykpIHsKICAgICAgICAgICAgICAgICsrJGRvV2hpbGVMZXZlbDsKCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRzZWFyY2hFbmRUb2tlbi0+ZXF1YWxzQW55KFsnKCcsICd7JywgW0NUOjpUX0FSUkFZX1NRVUFSRV9CUkFDRV9PUEVOXV0pKSB7CiAgICAgICAgICAgICAgICBpZiAoJHNlYXJjaEVuZFRva2VuLT5lcXVhbHMoJygnKSkgewogICAgICAgICAgICAgICAgICAgICRibG9ja1R5cGUgPSBUb2tlbnM6OkJMT0NLX1RZUEVfUEFSRU5USEVTSVNfQlJBQ0U7CiAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHNlYXJjaEVuZFRva2VuLT5lcXVhbHMoJ3snKSkgewogICAgICAgICAgICAgICAgICAgICRibG9ja1R5cGUgPSBUb2tlbnM6OkJMT0NLX1RZUEVfQ1VSTFlfQlJBQ0U7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRibG9ja1R5cGUgPSBUb2tlbnM6OkJMT0NLX1RZUEVfQVJSQVlfU1FVQVJFX0JSQUNFOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRzZWFyY2hFbmRJbmRleCA9ICR0b2tlbnMtPmZpbmRCbG9ja0VuZCgkYmxvY2tUeXBlLCAkc2VhcmNoRW5kSW5kZXgpOwogICAgICAgICAgICAgICAgJHNlYXJjaEVuZFRva2VuID0gJHRva2Vuc1skc2VhcmNoRW5kSW5kZXhdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoISRzZWFyY2hFbmRUb2tlbi0+ZXF1YWxzQW55KFsnOycsICcsJywgJ30nLCBbVF9DTE9TRV9UQUddXSkpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkY29udHJvbFN0cnVjdHVyZUNvbnRpbnVhdGlvbkluZGV4ID0gJHRva2Vucy0+Z2V0TmV4dE1lYW5pbmdmdWxUb2tlbigkc2VhcmNoRW5kSW5kZXgpOwoKICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgJGlmTGV2ZWwgPiAwCiAgICAgICAgICAgICAgICAmJiBudWxsICE9PSAkY29udHJvbFN0cnVjdHVyZUNvbnRpbnVhdGlvbkluZGV4CiAgICAgICAgICAgICAgICAmJiAkdG9rZW5zWyRjb250cm9sU3RydWN0dXJlQ29udGludWF0aW9uSW5kZXhdLT5pc0dpdmVuS2luZChbVF9FTFNFLCBUX0VMU0VJRl0pCiAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgICR0b2tlbnNbJGNvbnRyb2xTdHJ1Y3R1cmVDb250aW51YXRpb25JbmRleF0tPmlzR2l2ZW5LaW5kKFRfRUxTRSkKICAgICAgICAgICAgICAgICAgICAmJiAhJHRva2Vuc1skdG9rZW5zLT5nZXROZXh0TWVhbmluZ2Z1bFRva2VuKCRjb250cm9sU3RydWN0dXJlQ29udGludWF0aW9uSW5kZXgpXS0+aXNHaXZlbktpbmQoVF9JRikKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIC0tJGlmTGV2ZWw7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNlYXJjaEVuZEluZGV4ID0gJGNvbnRyb2xTdHJ1Y3R1cmVDb250aW51YXRpb25JbmRleDsKCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgJGRvV2hpbGVMZXZlbCA+IDAKICAgICAgICAgICAgICAgICYmIG51bGwgIT09ICRjb250cm9sU3RydWN0dXJlQ29udGludWF0aW9uSW5kZXgKICAgICAgICAgICAgICAgICYmICR0b2tlbnNbJGNvbnRyb2xTdHJ1Y3R1cmVDb250aW51YXRpb25JbmRleF0tPmlzR2l2ZW5LaW5kKFtUX1dISUxFXSkKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAtLSRkb1doaWxlTGV2ZWw7CiAgICAgICAgICAgICAgICAkc2VhcmNoRW5kSW5kZXggPSAkY29udHJvbFN0cnVjdHVyZUNvbnRpbnVhdGlvbkluZGV4OwoKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkZW5kSW5kZXggPSAkdG9rZW5zLT5nZXRQcmV2Tm9uV2hpdGVzcGFjZSgkc2VhcmNoRW5kSW5kZXgpOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJGVuZEluZGV4ID8/ICR0b2tlbnMtPmdldFByZXZNZWFuaW5nZnVsVG9rZW4oJHBhcmVudFNjb3BlRW5kSW5kZXgpOwogICAgfQoKICAgIC8qKgogICAgICogQHJldHVybiBhcnJheXtpbnQsIGJvb2x9CiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gZmluZENhc2VCbG9ja0VuZChUb2tlbnMgJHRva2VucywgaW50ICRpbmRleCk6IGFycmF5CiAgICB7CiAgICAgICAgZm9yICgkbWF4ID0gXGNvdW50KCR0b2tlbnMpOyAkaW5kZXggPCAkbWF4OyArKyRpbmRleCkgewogICAgICAgICAgICBpZiAoJHRva2Vuc1skaW5kZXhdLT5pc0dpdmVuS2luZChUX1NXSVRDSCkpIHsKICAgICAgICAgICAgICAgICRicmFjZUluZGV4ID0gJHRva2Vucy0+Z2V0TmV4dE1lYW5pbmdmdWxUb2tlbigKICAgICAgICAgICAgICAgICAgICAkdG9rZW5zLT5maW5kQmxvY2tFbmQoCiAgICAgICAgICAgICAgICAgICAgICAgIFRva2Vuczo6QkxPQ0tfVFlQRV9QQVJFTlRIRVNJU19CUkFDRSwKICAgICAgICAgICAgICAgICAgICAgICAgJHRva2Vucy0+Z2V0TmV4dE1lYW5pbmdmdWxUb2tlbigkaW5kZXgpCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICBpZiAoJHRva2Vuc1skYnJhY2VJbmRleF0tPmVxdWFscygnOicpKSB7CiAgICAgICAgICAgICAgICAgICAgJGluZGV4ID0gJHRoaXMtPmFsdGVybmF0aXZlU3ludGF4QW5hbHl6ZXItPmZpbmRBbHRlcm5hdGl2ZVN5bnRheEJsb2NrRW5kKCR0b2tlbnMsICRpbmRleCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRpbmRleCA9ICR0b2tlbnMtPmZpbmRCbG9ja0VuZChUb2tlbnM6OkJMT0NLX1RZUEVfQ1VSTFlfQlJBQ0UsICRicmFjZUluZGV4KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJGluZGV4XS0+ZXF1YWxzKCd7JykpIHsKICAgICAgICAgICAgICAgICRpbmRleCA9ICR0b2tlbnMtPmZpbmRCbG9ja0VuZChUb2tlbnM6OkJMT0NLX1RZUEVfQ1VSTFlfQlJBQ0UsICRpbmRleCk7CgogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkdG9rZW5zWyRpbmRleF0tPmVxdWFsc0FueShbW1RfQ0FTRV0sIFtUX0RFRkFVTFRdXSkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBbJGluZGV4LCB0cnVlXTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJGluZGV4XS0+ZXF1YWxzQW55KFsnfScsIFtUX0VORFNXSVRDSF1dKSkgewogICAgICAgICAgICAgICAgcmV0dXJuIFskdG9rZW5zLT5nZXRQcmV2Tm9uV2hpdGVzcGFjZSgkaW5kZXgpLCBmYWxzZV07CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRocm93IG5ldyBcTG9naWNFeGNlcHRpb24oJ0VuZCBvZiBjYXNlIGJsb2NrIG5vdCBmb3VuZC4nKTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIGdldExpbmVJbmRlbnRhdGlvbldpdGhCcmFjZXNDb21wYXRpYmlsaXR5KFRva2VucyAkdG9rZW5zLCBpbnQgJGluZGV4LCBzdHJpbmcgJHJlZ3VsYXJJbmRlbnQpOiBzdHJpbmcKICAgIHsKICAgICAgICBpZiAoCiAgICAgICAgICAgICR0aGlzLT5icmFjZXNGaXhlckNvbXBhdGliaWxpdHkKICAgICAgICAgICAgJiYgJHRva2Vuc1skaW5kZXhdLT5pc0dpdmVuS2luZChUX09QRU5fVEFHKQogICAgICAgICAgICAmJiBQcmVnOjptYXRjaCgnL1xSLycsICR0b2tlbnNbJGluZGV4XS0+Z2V0Q29udGVudCgpKQogICAgICAgICAgICAmJiBpc3NldCgkdG9rZW5zWyRpbmRleCArIDFdKQogICAgICAgICAgICAmJiAkdG9rZW5zWyRpbmRleCArIDFdLT5pc1doaXRlc3BhY2UoKQogICAgICAgICAgICAmJiBQcmVnOjptYXRjaCgnL1xoKyQvRCcsICR0b2tlbnNbJGluZGV4ICsgMV0tPmdldENvbnRlbnQoKSkKICAgICAgICApIHsKICAgICAgICAgICAgcmV0dXJuIFByZWc6OnJlcGxhY2UoJy8uKj8oXGgrKSQvc0QnLCAnJDEnLCAkdG9rZW5zWyRpbmRleCArIDFdLT5nZXRDb250ZW50KCkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRyZWd1bGFySW5kZW50OwogICAgfQoKICAgIC8qKgogICAgICogUmV0dXJucyB3aGV0aGVyIHRoZSB0b2tlbiBhdCBnaXZlbiBpbmRleCBpcyB0aGUgbGFzdCB0b2tlbiBpbiBhIHByb3BlcnR5CiAgICAgKiBkZWNsYXJhdGlvbiBiZWZvcmUgdGhlIHR5cGUgb3IgdGhlIG5hbWUgb2YgdGhhdCBwcm9wZXJ0eS4KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBpc1Byb3BlcnR5U3RhcnQoVG9rZW5zICR0b2tlbnMsIGludCAkaW5kZXgpOiBib29sCiAgICB7CiAgICAgICAgJHByb3BlcnR5S2V5d29yZHMgPSBbVF9WQVIsIFRfUFVCTElDLCBUX1BST1RFQ1RFRCwgVF9QUklWQVRFLCBUX1NUQVRJQ107CiAgICAgICAgaWYgKFxkZWZpbmVkKCdUX1JFQURPTkxZJykpIHsgLy8gQFRPRE86IGRyb3AgY29uZGl0aW9uIHdoZW4gUEhQIDguMSsgaXMgcmVxdWlyZWQKICAgICAgICAgICAgJHByb3BlcnR5S2V5d29yZHNbXSA9IFRfUkVBRE9OTFk7CiAgICAgICAgfQoKICAgICAgICAkbmV4dEluZGV4ID0gJHRva2Vucy0+Z2V0TmV4dE1lYW5pbmdmdWxUb2tlbigkaW5kZXgpOwogICAgICAgIGlmICgKICAgICAgICAgICAgbnVsbCA9PT0gJG5leHRJbmRleAogICAgICAgICAgICB8fCAkdG9rZW5zWyRuZXh0SW5kZXhdLT5pc0dpdmVuS2luZCgkcHJvcGVydHlLZXl3b3JkcykKICAgICAgICAgICAgfHwgJHRva2Vuc1skbmV4dEluZGV4XS0+aXNHaXZlbktpbmQoW1RfQ09OU1QsIFRfRlVOQ1RJT05dKQogICAgICAgICkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICB3aGlsZSAoJHRva2Vuc1skaW5kZXhdLT5pc0dpdmVuS2luZCgkcHJvcGVydHlLZXl3b3JkcykpIHsKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJGluZGV4XS0+aXNHaXZlbktpbmQoW1RfVkFSLCBUX1BVQkxJQywgVF9QUk9URUNURUQsIFRfUFJJVkFURV0pKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGluZGV4ID0gJHRva2Vucy0+Z2V0UHJldk1lYW5pbmdmdWxUb2tlbigkaW5kZXgpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8qKgogICAgICogUmV0dXJucyB3aGV0aGVyIHRoZSB0b2tlbiBhdCBnaXZlbiBpbmRleCBpcyBhIGNvbW1lbnQgd2hvc2UgaW5kZW50YXRpb24KICAgICAqIGNhbiBiZSBmaXhlZC4KICAgICAqCiAgICAgKiBJbmRlbnRhdGlvbiBvZiBhIGNvbW1lbnQgaXMgbm90IGNoYW5nZWQgd2hlbiB0aGUgY29tbWVudCBpcyBwYXJ0IG9mIGEKICAgICAqIG11bHRpLWxpbmUgbWVzc2FnZSB3aG9zZSBsaW5lcyBhcmUgYWxsIHNpbmdsZS1saW5lIGNvbW1lbnRzIGFuZCBhdCBsZWFzdAogICAgICogb25lIGxpbmUgaGFzIG1lYW5pbmdmdWwgY29udGVudC4KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBpc0NvbW1lbnRXaXRoRml4YWJsZUluZGVudGF0aW9uKFRva2VucyAkdG9rZW5zLCBpbnQgJGluZGV4KTogYm9vbAogICAgewogICAgICAgIGlmICghJHRva2Vuc1skaW5kZXhdLT5pc0NvbW1lbnQoKSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBpZiAoc3RyX3N0YXJ0c193aXRoKCR0b2tlbnNbJGluZGV4XS0+Z2V0Q29udGVudCgpLCAnLyonKSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgogICAgICAgICRpbmRlbnQgPSBwcmVnX3F1b3RlKCR0aGlzLT53aGl0ZXNwYWNlc0NvbmZpZy0+Z2V0SW5kZW50KCksICd+Jyk7CgogICAgICAgIGlmIChQcmVnOjptYXRjaCgifl4oLy98IykoeyRpbmRlbnR9LiopPyR+IiwgJHRva2Vuc1skaW5kZXhdLT5nZXRDb250ZW50KCkpKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgICRmaXJzdENvbW1lbnRJbmRleCA9ICRpbmRleDsKICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICAkZmlyc3RDb21tZW50Q2FuZGlkYXRlSW5kZXggPSAkdGhpcy0+Z2V0U2libGluZ0NvbnRpbnVvdXNTaW5nbGVMaW5lQ29tbWVudCgkdG9rZW5zLCAkZmlyc3RDb21tZW50SW5kZXgsIGZhbHNlKTsKICAgICAgICAgICAgaWYgKG51bGwgPT09ICRmaXJzdENvbW1lbnRDYW5kaWRhdGVJbmRleCkgewogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRmaXJzdENvbW1lbnRJbmRleCA9ICRmaXJzdENvbW1lbnRDYW5kaWRhdGVJbmRleDsKICAgICAgICB9CgogICAgICAgICRsYXN0Q29tbWVudEluZGV4ID0gJGluZGV4OwogICAgICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgICAgICRsYXN0Q29tbWVudENhbmRpZGF0ZUluZGV4ID0gJHRoaXMtPmdldFNpYmxpbmdDb250aW51b3VzU2luZ2xlTGluZUNvbW1lbnQoJHRva2VucywgJGxhc3RDb21tZW50SW5kZXgsIHRydWUpOwogICAgICAgICAgICBpZiAobnVsbCA9PT0gJGxhc3RDb21tZW50Q2FuZGlkYXRlSW5kZXgpIHsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkbGFzdENvbW1lbnRJbmRleCA9ICRsYXN0Q29tbWVudENhbmRpZGF0ZUluZGV4OwogICAgICAgIH0KCiAgICAgICAgaWYgKCRmaXJzdENvbW1lbnRJbmRleCA9PT0gJGxhc3RDb21tZW50SW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQoKICAgICAgICBmb3IgKCRpID0gJGZpcnN0Q29tbWVudEluZGV4ICsgMTsgJGkgPCAkbGFzdENvbW1lbnRJbmRleDsgKyskaSkgewogICAgICAgICAgICBpZiAoISR0b2tlbnNbJGldLT5pc1doaXRlc3BhY2UoKSAmJiAhJHRva2Vuc1skaV0tPmlzQ29tbWVudCgpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gZ2V0U2libGluZ0NvbnRpbnVvdXNTaW5nbGVMaW5lQ29tbWVudChUb2tlbnMgJHRva2VucywgaW50ICRpbmRleCwgYm9vbCAkYWZ0ZXIpOiA/aW50CiAgICB7CiAgICAgICAgJHNpYmxpbmdJbmRleCA9ICRpbmRleDsKICAgICAgICBkbyB7CiAgICAgICAgICAgIGlmICgkYWZ0ZXIpIHsKICAgICAgICAgICAgICAgICRzaWJsaW5nSW5kZXggPSAkdG9rZW5zLT5nZXROZXh0VG9rZW5PZktpbmQoJHNpYmxpbmdJbmRleCwgW1tUX0NPTU1FTlRdXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkc2libGluZ0luZGV4ID0gJHRva2Vucy0+Z2V0UHJldlRva2VuT2ZLaW5kKCRzaWJsaW5nSW5kZXgsIFtbVF9DT01NRU5UXV0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAobnVsbCA9PT0gJHNpYmxpbmdJbmRleCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgIH0KICAgICAgICB9IHdoaWxlIChzdHJfc3RhcnRzX3dpdGgoJHRva2Vuc1skc2libGluZ0luZGV4XS0+Z2V0Q29udGVudCgpLCAnLyonKSk7CgogICAgICAgICRuZXdMaW5lcyA9IDA7CiAgICAgICAgZm9yICgkaSA9IG1pbigkc2libGluZ0luZGV4LCAkaW5kZXgpICsgMSwgJG1heCA9IG1heCgkc2libGluZ0luZGV4LCAkaW5kZXgpOyAkaSA8ICRtYXg7ICsrJGkpIHsKICAgICAgICAgICAgaWYgKCR0b2tlbnNbJGldLT5pc1doaXRlc3BhY2UoKSAmJiBQcmVnOjptYXRjaCgnL1xSLycsICR0b2tlbnNbJGldLT5nZXRDb250ZW50KCkpKSB7CiAgICAgICAgICAgICAgICBpZiAoMSA9PT0gJG5ld0xpbmVzIHx8IFByZWc6Om1hdGNoKCcvXFIuKlxSLycsICR0b2tlbnNbJGldLT5nZXRDb250ZW50KCkpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgKyskbmV3TGluZXM7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAkc2libGluZ0luZGV4OwogICAgfQp9CiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";